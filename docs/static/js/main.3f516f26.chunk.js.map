{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","event","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAiCgBA,EA9BI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAUT,EACVU,SAjBc,SAACC,GACvBV,EAAcU,EAAMC,OAAOH,YCNtBI,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCLJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC6EO,UAAUF,GADvF,sBAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAYZY,GAZY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAACd,IACGe,EDf2BK,CAAapB,GAAjCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAEtB,OACA,oCACI,4BAAMd,GAEJc,GAAW,uBAAGlB,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAERe,EAAOH,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIY,IAAMZ,EAAIC,IACND,UESba,EAzBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ6C,EAAWf,KAAI,SAACrB,GAAD,OACX,kBAAC,EAAD,CACIa,SAAab,EACbkC,IAAOlC,UCdnCqC,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.3f516f26.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories((cat) => [inputValue, ...cat]);\n            setInputValue('');\n        }\n    }\n\n    return(\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value = { inputValue }\n                onChange = { handleInputChange }/>\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n\nexport default  AddCategory;","import React from 'react';\n\nexport const GifGridItem = ({title, url}) => {\n    return(\n        <div className=\"card animate__animated animate__fadeInLeft\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    );\n};","\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=K18TQHOfMMrCINMhsYf6BKbgeq99KP0z&q=${ encodeURI(category) }&limit=10`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return(\n    <>\n        <h3>{ category }</h3>\n\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n         <div className=\"card-grid\">\n            {\n                images.map((img) => \n                    <GifGridItem \n                        key={ img.id } \n                        {...img}\n                    /> \n                )\n            }\n        </div>\n    </>)\n};\n\n","import { useState, useEffect } from 'react';\n\nimport { getGifs } from '../components/helpers/GetGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            });\n        \n    }, [category])\n    return state;\n}","import React, { useState }from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);   \n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            \n            <ol>\n                {\n                    categories.map((cat) => (\n                        <GifGrid \n                            category = { cat } \n                            key= { cat }\n                        />)\n                    )\n                }\n            </ol>\n        </>        \n    );\n\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp/>, document.getElementById('root'));\n\n"],"sourceRoot":""}